---
import type { FaqItem } from "../data/faq"
interface Props {
	items: FaqItem[]
	heading?: string
	noTopPadding?: boolean
	noBottomPadding?: boolean
	tinted?: boolean
}
const {
	items,
	heading = "Common Questions",
	noTopPadding = false,
	noBottomPadding = false,
	tinted = false,
} = Astro.props as Props
const sectionClass = `section${noTopPadding ? " pt-0" : ""}${noBottomPadding ? " pb-0" : ""}`
const detailsClass = tinted
	? "faq-details group rounded-md border border-brand-orange/20 bg-brand-orange/5 p-4 faq-tinted transition-all duration-300"
	: "faq-details group rounded-md border border-zinc-200 bg-white p-4 faq-default transition-all duration-300"
---
<div class={sectionClass} itemscope itemtype="https://schema.org/FAQPage">
  <h2 class="mt-1 text-2xl font-bold tracking-tight">{heading}</h2>
  <div class="mt-4 space-y-2">
    {items.map((it) => (
      <details class={detailsClass} itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
        <summary class="font-medium flex items-center justify-between text-left w-full cursor-pointer" itemprop="name">
          <span>{it.q}</span>
          <svg class="faq-chevron h-5 w-5 flex-shrink-0 transition-transform duration-300 cubic-bezier(0.4, 0, 0.2, 1)" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </summary>
        <div class="faq-content" itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
          <div class="pt-2 text-sm text-zinc-700">
            <p itemprop="text">{it.a}</p>
          </div>
        </div>
      </details>
    ))}
  </div>
</div>

<style>
  /* FAQ chevron animation */
  .faq-chevron {
    transition: transform 0.3s ease-out;
    transform-origin: center;
  }
  
  .faq-details[open] .faq-chevron,
  .faq-details.faq-closing .faq-chevron {
    transform: rotate(180deg);
  }
  
  /* Closing animation - rotate chevron back */
  .faq-details.faq-closing .faq-chevron {
    transform: rotate(0deg);
  }
</style>

<script>
  // Enhance FAQ animations for smoother transitions
  document.addEventListener('DOMContentLoaded', function() {
    const details = document.querySelectorAll('.faq-details');
    
    details.forEach(detail => {
      const summary = detail.querySelector('summary');
      const content = detail.querySelector('.faq-content');
      let isAnimating = false;
      
      // Prevent default toggle to control animation
      summary.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Prevent multiple clicks during animation
        if (isAnimating) return;
        
        // Toggle the open state
        if (detail.hasAttribute('open')) {
          // Closing animation
          isAnimating = true;
          
          // Add closing class to trigger animation
          detail.classList.add('faq-closing');
          
          // Wait for animation to complete before removing open attribute
          setTimeout(function() {
            detail.removeAttribute('open');
            detail.classList.remove('faq-closing');
            isAnimating = false;
          }, 300); // Match CSS transition duration
        } else {
          // Opening animation
          isAnimating = true;
          detail.setAttribute('open', '');
          
          // Reset animation flag after transition completes
          setTimeout(function() {
            isAnimating = false;
          }, 300); // Match CSS transition duration
        }
      });
    });
  });
</script>

