---
const {
	title = "Scrapyard Sites",
	description = "Scrapyard websites built for credibility, qualification, visibility and reliability.",
	ogImage,
	footerTinted = false,
} = Astro.props
import Footer from "../components/Footer.astro"
import Header from "../components/Header.astro"
import "../styles/globals.css"
import heroUrl from "../assets/hero.jpg?url"
import { withBase } from "../lib/paths"
const canonical = new URL(withBase(Astro.url.pathname), Astro.site).toString()
const ogImageUrl = ogImage
	? typeof ogImage === "string"
		? ogImage
		: ogImage.src
	: new URL("/og-default.jpg", Astro.site).toString()
const absoluteLogoUrl = new URL("/apple-touch-icon.png", Astro.site).toString()
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonical} />
    
    <!-- Favicons -->
    <link rel="icon" href="/favicon.ico" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#f97316" />
    
    <!-- Theme -->
    <meta name="theme-color" content="#ffffff" />
    <meta name="color-scheme" content="light" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    
    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonical} />
    <meta property="og:site_name" content="Scrapyard Sites" />
    <meta property="og:image" content={ogImageUrl} />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageUrl} />
    <script defer src="https://cloud.umami.is/script.js" data-website-id="05311cc2-11da-4d7c-b0bb-7de8ec3277a1"></script>
    <script type="application/ld+json" is:inline>{JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'Organization',
      name: 'Scrapyard Sites',
      url: Astro.site,
      logo: absoluteLogoUrl,
      sameAs: [
        'https://www.linkedin.com/company/scrapyardsites',
        'https://x.com/scrapyardsites'
      ],
      contactPoint: [{
        '@type': 'ContactPoint',
        email: 'hello@scrapyardsites.com',
        telephone: '+1-949-356-8762',
        contactType: 'customer support'
      }]
    })}</script>
  </head>
  <body class="min-h-screen antialiased bg-white text-zinc-900 font-sans">
    <a href="#main-content" class="absolute left-2 top-2 z-50 -translate-y-20 rounded bg-white px-3 py-2 text-zinc-900 shadow transition focus:translate-y-0">Skip to content</a>
    <Header />
    <main id="main-content">
      <slot />
    </main>
    <Footer tinted={footerTinted} />
    <script is:inline>
      (function(){
        if (window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches) return;
        var observer = new IntersectionObserver(function(entries){
          entries.forEach(function(e){ if (e.isIntersecting) { e.target.classList.add('in'); observer.unobserve(e.target); } });
        }, { rootMargin: '0px 0px -10% 0px', threshold: 0.1 });
        document.querySelectorAll('.reveal').forEach(function(el){ observer.observe(el); });
      })();
    </script>
    <script is:inline>
      // Umami goals for key CTAs
      (function(){
        var d = document;
        function send(goal){
          try {
            var u = (window && (window).umami);
            if (u && typeof u.track === 'function') u.track(goal);
          } catch {}
        }
        d.addEventListener('click', function(e){
          var target = e.target as HTMLElement | null;
          if (!target) return;
          var a = target.closest('[data-goal]') as HTMLElement | null;
          if (a && a.getAttribute('data-goal')) send(a.getAttribute('data-goal'));
          var link = target.closest('a') as HTMLAnchorElement | null;
          if (link && link.href && link.href.startsWith('tel:')) send('Click: Phone');
        }, true);
      })();
    </script>
  </body>
</html>


